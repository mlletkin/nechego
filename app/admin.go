package app

import (
	"errors"
	"nechego/service"

	tele "gopkg.in/telebot.v3"
)

const (
	userBlocked          = Response("ÐŸÐ¾Ð»ÑŒÐ·Ð¾Ð²Ð°Ñ‚ÐµÐ»ÑŒ Ð·Ð°Ð±Ð»Ð¾ÐºÐ¸Ñ€Ð¾Ð²Ð°Ð½ ðŸš«")
	userUnblocked        = Response("ÐŸÐ¾Ð»ÑŒÐ·Ð¾Ð²Ð°Ñ‚ÐµÐ»ÑŒ Ñ€Ð°Ð·Ð±Ð»Ð¾ÐºÐ¸Ñ€Ð¾Ð²Ð°Ð½ âœ…")
	userAlreadyBlocked   = UserError("ÐŸÐ¾Ð»ÑŒÐ·Ð¾Ð²Ð°Ñ‚ÐµÐ»ÑŒ ÑƒÐ¶Ðµ Ð·Ð°Ð±Ð»Ð¾ÐºÐ¸Ñ€Ð¾Ð²Ð°Ð½.")
	userAlreadyUnblocked = UserError("ÐŸÐ¾Ð»ÑŒÐ·Ð¾Ð²Ð°Ñ‚ÐµÐ»ÑŒ Ð½Ðµ Ð·Ð°Ð±Ð»Ð¾ÐºÐ¸Ñ€Ð¾Ð²Ð°Ð½.")
)

// !Ð±Ð°Ð½
func (a *App) handleBan(c tele.Context) error {
	user := getReplyUser(c)
	if err := a.service.Ban(user); err != nil {
		if errors.Is(err, service.ErrAlreadyBanned) {
			return respondUserError(c, userAlreadyBlocked)
		}
		return respondInternalError(c, err)
	}
	return respond(c, userBlocked)
}

// !Ñ€Ð°Ð·Ð±Ð°Ð½
func (a *App) handleUnban(c tele.Context) error {
	user := getReplyUser(c)
	if err := a.service.Unban(user); err != nil {
		if errors.Is(err, service.ErrAlreadyUnbanned) {
			return respondUserError(c, userAlreadyUnblocked)
		}
		return respondInternalError(c, err)
	}
	return respond(c, userUnblocked)
}
