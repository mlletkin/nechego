package app

import (
	"context"
	"errors"
	"fmt"
	"io"
	"math/rand"
	"nechego/input"
	"nechego/model"
	"net/http"
	"net/url"
	"path/filepath"
	"strings"
	"time"
	"unicode/utf8"

	tele "gopkg.in/telebot.v3"
)

// handleProbability responds with a probability of the message.
func (a *App) handleProbability(c tele.Context) error {
	m := getMessage(c).Argument()
	return c.Send(probability(m))
}

var probabilityTemplates = []string{
	"–ó–¥—Ä–∞–≤—ã–π —Å–º—ã—Å–ª –≥–æ–≤–æ—Ä–∏—Ç –º–Ω–µ –æ —Ç–æ–º, —á—Ç–æ %s —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é %d%%",
	"–ë–ª–∞–≥–æ–¥–∞—Ä—è —á—É–≤—Å—Ç–≤–µ–Ω–Ω–æ–º—É –æ–ø—ã—Ç—É —è –æ–ø—Ä–µ–¥–µ–ª–∏–ª, —á—Ç–æ %s —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é %d%%",
	"–Ø –¥—É–º–∞—é, —á—Ç–æ %s —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é %d%%",
	"–ò—Å–ø–æ–ª—å–∑—É—è –¥–∏–∞–ª–µ–∫—Ç–∏—á–µ—Å–∫—É—é –ª–æ–≥–∏–∫—É, —è –ø—Ä–∏—à–µ–ª –∫ –≤—ã–≤–æ–¥—É, —á—Ç–æ %s —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é %d%%",
	"–ü—Ä–æ–≤–µ–¥—è –Ω–µ–∫–∏–µ –∏–∑—ã—Å–∫–∞–Ω–∏—è, —è –≤—ã—Å—è—Å–Ω–∏–ª, —á—Ç–æ %s —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é %d%%",
	"–Ø –ø—Ä–æ–≤–µ–ª –º—ã—Å–ª–µ–Ω–Ω—ã–π —ç–∫–ø–µ—Ä–∏–º–µ–Ω—Ç –∏ –≤—ã—è—Å–Ω–∏–ª, —á—Ç–æ %s —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é %d%%",
	"–ú–æ–∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø–æ—Ç—É–≥–∏ –ø—Ä–∏–≤–µ–ª–∏ –º–µ–Ω—è –∫ —Ç–æ–º—É, —á—Ç–æ %s —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é %d%%",
	"–° –ø–æ–º–æ—â—å—é —Ñ–∞–∫—Ç–æ–≤ –∏ –ª–æ–≥–∏–∫–∏ —è –¥–æ–∫–∞–∑–∞–ª, —á—Ç–æ %s —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é %d%%",
	"–ö–∞–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∞–∫—Ç–∏–∫–∞, %s —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é %d%%",
	"–ü—Ä–∏–∫–∏–Ω—É–≤ —Ä–∞–∑ –Ω–∞ —Ä–∞–∑, —è –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è —Å —Ç–µ–º, —á—Ç–æ %s —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é %d%%",
	"–£–≤–µ—Ä—è—é –≤–∞—Å –≤ —Ç–æ–º, —á—Ç–æ %s —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é %d%%",
}

// probability returns a probability of the message.
func probability(message string) string {
	t := probabilityTemplates[rand.Intn(len(probabilityTemplates))]
	p := rand.Intn(101)
	return fmt.Sprintf(t, message, p)
}

// handleWho responds with the message appended to the random chat member.
func (a *App) handleWho(c tele.Context) error {
	u, err := a.model.RandomUser(getGroup(c))
	if err != nil {
		return internalError(c, err)
	}
	message := markdownEscaper.Replace(getMessage(c).Argument())
	return c.Send(fmt.Sprintf("%s %s", a.mustMentionUser(u), message), tele.ModeMarkdownV2)
}

const (
	maxNameLength = 16
	nameTooLong   = "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∏–º–µ–Ω–∏ 16 —Å–∏–º–≤–æ–ª–æ–≤."
	yourNameIs    = "–í–∞—à–µ –∏–º—è: *%s* üîñ"
	pleaseReEnter = "–ü–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ –±–µ—Å–µ–¥—É —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é."
	nameSet       = "–ò–º—è *%s* —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ‚úÖ"
)

// handleTitle sets the admin title of the sender.
func (a *App) handleTitle(c tele.Context) error {
	user := getUser(c)
	newName := getMessage(c).Argument()
	if newName == "" {
		return c.Send(fmt.Sprintf(yourNameIs, a.mustMentionUser(user)), tele.ModeMarkdownV2)
	}
	if utf8.RuneCountInString(newName) > maxNameLength {
		return userError(c, nameTooLong)
	}
	if err := setName(c, user, newName); err != nil {
		return userError(c, pleaseReEnter)
	}
	return c.Send(fmt.Sprintf(nameSet, markdownEscaper.Replace(newName)), tele.ModeMarkdownV2)
}

func setName(c tele.Context, u model.User, newName string) error {
	group := c.Chat()
	sender := c.Sender()
	return c.Bot().SetAdminTitle(group, sender, newName)
}

var (
	mouseVideoPath = filepath.Join(dataPath, "mouse.mp4")
	mouseVideo     = &tele.Video{File: tele.FromDisk(mouseVideoPath)}
)

// handleMouse sends the mouse video
func (a *App) handleMouse(c tele.Context) error {
	return c.Send(mouseVideo)
}

const (
	weatherTimeout      = 10 * time.Second
	weatherTimeoutError = "–í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞ –≤—ã—à–ª–æ ‚òîÔ∏è"
	placeNotExists      = "–¢–∞–∫–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚òîÔ∏è"
	weatherBadRequest   = "–ù–µ—É–¥–∞—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å ‚òîÔ∏è"
	weatherURL          = "https://wttr.in/"
	weatherFormat       = "?format=%l:+%c+%t+\n–û—â—É—â–∞–µ—Ç—Å—è+–∫–∞–∫+%f\n\n–í–µ—Ç–µ—Ä+‚Äî+%w\n–í–ª–∞–∂–Ω–æ—Å—Ç—å+‚Äî+%h\n–î–∞–≤–ª–µ–Ω–∏–µ+‚Äî+%P\n–§–∞–∑–∞+–ª—É–Ω—ã+‚Äî+%m\n–£–§-–∏–Ω–¥–µ–∫—Å+‚Äî+%u\n"
)

// handleWeather sends the current weather for a given city
func (a *App) handleWeather(c tele.Context) error {
	place := getMessage(c).Argument()
	r, err := fetchWeather(place)
	if err != nil {
		if err.(*url.Error).Timeout() {
			return userError(c, weatherTimeoutError)
		}
		return internalError(c, err)
	}
	defer r.Body.Close()

	if r.StatusCode != http.StatusOK {
		if r.StatusCode == http.StatusNotFound {
			return userError(c, placeNotExists)
		}
		return userError(c, weatherBadRequest)
	}

	data, err := io.ReadAll(r.Body)
	if err != nil {
		return internalError(c, err)
	}
	return c.Send(string(data))
}

func fetchWeather(place string) (*http.Response, error) {
	ctx, cancel := context.WithTimeout(context.Background(), weatherTimeout)
	defer cancel()

	url := weatherURL + place + weatherFormat
	req, err := http.NewRequestWithContext(ctx, http.MethodGet, url, nil)
	if err != nil {
		return nil, err
	}
	req.Header.Add("Accept-Language", "ru")
	return http.DefaultClient.Do(req)
}

var tikTokVideo = &tele.Video{File: tele.FromDisk("data/tiktok.mp4")}

// !—Ç–∏–∫—Ç–æ–∫
func (a *App) handleTikTok(c tele.Context) error {
	return c.Send(tikTokVideo)
}

const (
	handleListTemplate = "–°–ø–∏—Å–æ–∫ %s üìù\n%s"
	minListLength      = 3
	maxListLength      = 5
)

// !—Å–ø–∏—Å–æ–∫
func (a *App) handleList(c tele.Context) error {
	n := randInRange(minListLength, maxListLength)
	users, err := a.model.RandomUsers(getGroup(c), n)
	if err != nil {
		return internalError(c, err)
	}
	what := markdownEscaper.Replace(getMessage(c).Argument())
	out := fmt.Sprintf(handleListTemplate, what, a.formatUnorderedList(users))
	return c.Send(out, tele.ModeMarkdownV2)
}

const (
	numberedTopTemplate   = "–¢–æ–ø %d %s üèÜ\n%s"
	unnumberedTopTemplate = "–¢–æ–ø %s üèÜ\n%s"
	maxTopNumber          = 5
	badTopNumber          = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ."
)

// !—Ç–æ–ø
func (a *App) handleTop(c tele.Context) error {
	argument, err := getMessage(c).TopArgument()
	if err != nil {
		return internalError(c, err)
	}

	var number int
	if argument.Number != nil {
		number = *argument.Number
	} else {
		number = maxTopNumber
	}
	if number <= 0 || number > maxTopNumber {
		return userError(c, badTopNumber)
	}
	users, err := a.model.RandomUsers(getGroup(c), number)
	if err != nil {
		return internalError(c, err)
	}
	top := a.formatOrderedList(users)
	what := markdownEscaper.Replace(argument.String)
	var out string
	if argument.Number != nil {
		out = fmt.Sprintf(numberedTopTemplate, number, what, top)
	} else {
		out = fmt.Sprintf(unnumberedTopTemplate, what, top)
	}
	return c.Send(out, tele.ModeMarkdownV2)
}

var games = []*tele.Dice{tele.Dart, tele.Ball, tele.Goal, tele.Slot, tele.Bowl}

// !–∏–≥—Ä–∞
func (a *App) handleGame(c tele.Context) error {
	game := games[rand.Intn(len(games))]
	return c.Send(game)
}

const randomPhotoChance = 0.02

func (a *App) handleRandomPhoto(c tele.Context) error {
	if rand.Float64() <= randomPhotoChance {
		return sendSmallProfilePhoto(c)
	}
	return nil
}

// !–æ—Ç–∫—Ä—ã—Ç—å
func (a *App) handleKeyboardOpen(c tele.Context) error {
	return c.Send("–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ ‚å®Ô∏è", keyboard)
}

// !–∑–∞–∫—Ä—ã—Ç—å
func (a *App) handleKeyboardClose(c tele.Context) error {
	return c.Send("–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–∞–∫—Ä—ã—Ç–∞ üò£", tele.RemoveKeyboard)
}

var (
	emojisActive   = []string{"üîà", "üîî", "‚úÖ", "üÜó", "‚ñ∂Ô∏è"}
	emojisInactive = []string{"üîá", "üîï", "üí§", "‚ùå", "‚õîÔ∏è", "üö´", "‚èπ"}
)

const (
	botTurnedOn         = "–ë–æ—Ç –≤–∫–ª—é—á–µ–Ω %s"
	botAlreadyTurnedOn  = "–ë–æ—Ç —É–∂–µ –≤–∫–ª—é—á–µ–Ω %s"
	botTurnedOff        = "–ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω %s"
	botAlreadyTurnedOff = "–ë–æ—Ç —É–∂–µ –≤—ã–∫–ª—é—á–µ–Ω %s"
)

// !–≤–∫–ª—é—á–∏—Ç—å
func (a *App) handleTurnOn(c tele.Context) error {
	emoji := emojisActive[rand.Intn(len(emojisActive))]
	ok := a.model.EnableGroup(getGroup(c))
	if !ok {
		return c.Send(fmt.Sprintf(botAlreadyTurnedOn, emoji))
	}
	return c.Send(fmt.Sprintf(botTurnedOn, emoji))
}

// !–≤—ã–∫–ª—é—á–∏—Ç—å
func (a *App) handleTurnOff(c tele.Context) error {
	emoji := emojisInactive[rand.Intn(len(emojisInactive))]
	ok := a.model.DisableGroup(getGroup(c))
	if !ok {
		return c.Send(fmt.Sprintf(botAlreadyTurnedOff, emoji))
	}
	return c.Send(fmt.Sprintf(botTurnedOff, emoji), tele.RemoveKeyboard)
}

const (
	userBlocked          = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω üö´"
	userAlreadyBlocked   = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω üõë"
	userUnblocked        = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ‚úÖ"
	userAlreadyUnblocked = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ‚ùé"
)

// !–±–∞–Ω
func (a *App) handleBan(c tele.Context) error {
	user := getReplyUser(c)
	if user.Banned {
		return c.Send(userAlreadyBlocked)
	}
	a.model.BanUser(user)
	return c.Send(userBlocked)
}

// handleUnban removes the user ID of the reply message's sender from the ban list.
func (a *App) handleUnban(c tele.Context) error {
	user := getReplyUser(c)
	if !user.Banned {
		return c.Send(userAlreadyUnblocked)
	}
	a.model.UnbanUser(user)
	return c.Send(userUnblocked)
}

const infoTemplate = "‚ÑπÔ∏è *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è* üìå\n\n%s\n%s\n%s\n"

// handleInfo sends a few lists of useful information.
func (a *App) handleInfo(c tele.Context) error {
	group := getGroup(c)
	admins, err := a.adminList(group)
	if err != nil {
		return internalError(c, err)
	}
	bans, err := a.banList(group)
	if err != nil {
		return internalError(c, err)
	}
	commands, err := a.forbiddenCommandList(group)
	if err != nil {
		return internalError(c, err)
	}
	lists := fmt.Sprintf(infoTemplate, admins, bans, commands)
	return c.Send(lists, tele.ModeMarkdownV2)
}

const adminListTemplate = "üë§ _–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è_\n%s"

func (a *App) adminList(g model.Group) (string, error) {
	users, err := a.model.ListUsers(g)
	if err != nil {
		return "", err
	}
	admins := []model.User{}
	for _, u := range users {
		if u.Admin {
			admins = append(admins, u)
		}
	}
	return fmt.Sprintf(adminListTemplate, a.formatUnorderedList(admins)), nil
}

const banListTemplate = "üõë _–ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫_\n%s"

func (a *App) banList(g model.Group) (string, error) {
	users, err := a.model.ListUsers(g)
	if err != nil {
		return "", err
	}
	banned := []model.User{}
	for _, u := range users {
		if u.Banned {
			banned = append(banned, u)
		}
	}
	return fmt.Sprintf(banListTemplate, a.formatUnorderedList(banned)), nil
}

const forbiddenCommandListTemplate = "üîí _–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã_\n%s"

func (a *App) forbiddenCommandList(g model.Group) (string, error) {
	commands, err := a.model.ForbiddenCommands(g)
	if err != nil {
		return "", err
	}
	return fmt.Sprintf(forbiddenCommandListTemplate, formatCommandList(commands)), nil
}

var categories = map[string]string{
	"–∫—Ä–µ–¥–∏—Ç—ã": `
–° –ø–æ–º–æ—â—å—é –∫—Ä–µ–¥–∏—Ç–æ–≤ –≤—ã –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å –¥–µ–Ω—å–≥–∏ –≤ –¥–æ–ª–≥, —á—Ç–æ–±—ã –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –∏—Ö –Ω–∞ —Ç–æ, —á–µ–≥–æ –≤–∞–º —Ç–∞–∫ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç: –Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–∫–∏–Ω—É—Ç—å –ø–æ–±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥ –≤ –∫–æ—Å—Ç–∏ –∏–ª–∏ –∫—É–ø–∏—Ç—å —É–¥–æ—á–∫—É\.

–ù–µ–ø–æ–≥–∞—à–µ–Ω–Ω—ã–π –∫—Ä–µ–¥–∏—Ç –≤–∞—Å –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç:
_\(1\)_ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–ø–∏—Å—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏ —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á–µ—Ç–∞\.
_\(2\)_ –ù–∞ –≤–∞—à—É —Å–∏–ª—É –Ω–∞–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –¥–µ–±–∞—Ñ\.

–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ä–µ–¥—Å—Ç–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å –≤ –∫—Ä–µ–¥–∏—Ç ‚Äî _–∫—Ä–µ–¥–∏—Ç–Ω—ã–π –ª–∏–º–∏—Ç_ ‚Äî —ç—Ç–æ —Å–∞–º–∞—è –±–æ–ª—å—à–∞—è —Å—É–º–º–∞ –¥–µ–Ω–µ–≥, –∫–æ—Ç–æ—Ä–æ–π –≤—ã –∫–æ–≥–¥–∞ –ª–∏–±–æ –≤–ª–∞–¥–µ–ª–∏\.

–ï—Å–ª–∏ —ç—Ç–∏ —É—Å–ª–æ–≤–∏—è –≤–∞—Å —É—Å—Ç—Ä–∞–∏–≤–∞—é—Ç, –∫—Ä–µ–¥–∏—Ç –º–æ–∂–Ω–æ –≤–∑—è—Ç—å —Ç–∞–∫:
` + "`" + `!–∫—Ä–µ–¥–∏—Ç <—Å—É–º–º–∞>` + "`" + `

–ß—Ç–æ–±—ã –ø–æ–≥–∞—Å–∏—Ç—å –∫—Ä–µ–¥–∏—Ç, —Å–Ω–∞—á–∞–ª–∞ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç:
_1\._ ` + "`" + `!–¥–µ–ø–æ–∑–∏—Ç <—Å—É–º–º–∞>` + "`" + `
_2\._ ` + "`" + `!–ø–æ–≥–∞—Å–∏—Ç—å <—Å—É–º–º–∞>` + "`" + `

–ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–¥–∞–≤–∞—Ç—å –∫—Ä–µ–¥–∏—Ç —Ü–µ–ª–∏–∫–æ–º ‚Äî –µ–≥–æ –º–æ–∂–Ω–æ –æ—Ç–¥–∞–≤–∞—Ç—å –ø–æ—Ä—Ü–∏—è–º–∏\.`,
	"–∫–∞–∑–∏–Ω–æ": `
–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É –≤ –∫–∞–∑–∏–Ω–æ, –≤—ã –º–æ–∂–µ—Ç–µ —Ä–∏—Å–∫–Ω—É—Ç—å –±—Ä–æ—Å–∏—Ç—å –∫–æ—Å—Ç–∏\.

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É ` + "`" + `!–∫–æ—Å—Ç–∏ <—Å—Ç–∞–≤–∫–∞>` + "`" + `\. –†–æ–±–æ—Ç\-–ø—Ä–∏—Å–ª—É–∂–Ω–∏–∫ –±—Ä–æ—Å–∏—Ç –∫–æ—Å—Ç–∏, –∑–∞—Ç–µ–º –±—Ä–æ—Å–∞–π—Ç–µ —Å–≤–æ–∏\. –ï—Å–ª–∏ –≤—ã –≤—ã–±—å–µ—Ç–µ –±–æ–ª—å—à–µ, —á–µ–º –æ–Ω, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –≤—ã–∏–≥—Ä—ã—à\. –í —Å–ª—É—á–∞–µ –Ω–∏—á—å–µ–π, –≤–∞–º –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å—Ç–∞–≤–∫–∞\. –ï—Å–ª–∏ —Ä–æ–±–æ—Ç –≤—ã–±—å–µ—Ç –±–æ–ª—å—à–µ, —á–µ–º –≤—ã ‚Äî –æ–Ω –∑–∞–±–µ—Ä–µ—Ç –≤–∞—à–∏ –¥–µ–Ω—å–≥–∏\.

–° –Ω–µ–∫–æ—Ç–æ—Ä—ã–º —à–∞–Ω—Å–æ–º –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å\. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞ ‚Äî ` + formatMoney(diceBetForBonus) + `\.
`,
	"–¥—Ä–∞–∫–∞": `
–í—ã –º–æ–∂–µ—Ç–µ —Å—Ä–∞–∂–∞—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\. –ó–∞ –ø–æ–±–µ–¥—É –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –º–æ–Ω–µ—Ç—ã, –∑–∞ –ø—Ä–æ–∏–≥—Ä—ã—à ‚Äî –ø–æ—Ç–µ—Ä—è–µ—Ç–µ\. –ß—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –±–æ–π, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É ` + "`" + `!–¥—Ä–∞–∫–∞` + "`" + ` –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\.

–ù–∞ –∏—Å—Ö–æ–¥ –ø–æ–µ–¥–∏–Ω–∫–∞ –≤–ª–∏—è–µ—Ç —Å–∏–ª–∞\. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –µ–µ –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã ` + "`" + `!—Å–∏–ª–∞` + "`" + `\.

–°–ø–∏—Å–æ–∫ —Å–∞–º—ã—Ö —Å–∏–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ` + "`" + `!—Ç–æ–ø —Å–∏–ª—å–Ω—ã—Ö` + "`" + `
`,
	"—Ä—ã–±–∞–ª–∫–∞": `
–í—ã –º–æ–∂–µ—Ç–µ –ª–æ–≤–∏—Ç—å —Ä—ã–±—É: ` + "`" + `!—Ä—ã–±–∞–ª–∫–∞` + "`" + `\. –î–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —É–¥–æ—á–∫–∞\. –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –µ–µ –º–æ–∂–Ω–æ –∑–∞ ` + formatMoney(fishingRodPrice) + ` —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã ` + "`" + `!—É–¥–æ—á–∫–∞` + "`" + `\.

–ï—Å–ª–∏ –≤—ã –æ—Å—Ç–∞–≤–∏–ª–∏ —Ä—ã–±—É —Å–µ–±–µ, –µ–µ –º–æ–∂–Ω–æ —Å—ä–µ—Å—Ç—å, —á—Ç–æ–±—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ–º–Ω–æ–≥–æ —ç–Ω–µ—Ä–≥–∏–∏: ` + "`" + `!–µ–¥–∞` + "`" + `\.
`,
	"–±–∞–Ω–∫": `
–ß—Ç–æ–±—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –¥–µ–Ω—å–≥–∏ ‚Äî —Ç–∞–∫, —á—Ç–æ–±—ã —É –≤–∞—Å –Ω–µ –º–æ–≥–ª–∏ –∏—Ö –æ—Ç–Ω—è—Ç—å ‚Äî –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —É—Å–ª—É–≥–∞–º–∏ –±–∞–Ω–∫–∞\.

–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—á–µ—Ç–µ, –∫–æ–º–º–∏—Å—Å–∏—è—Ö, –∏ –ª–∏–º–∏—Ç–∞—Ö: ` + "`" + `!–±–∞–Ω–∫` + "`" + `
–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å: ` + "`" + `!–±–∞–ª–∞–Ω—Å` + "`" + `
–ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç: ` + "`" + `!–¥–µ–ø–æ–∑–∏—Ç <—Å—É–º–º–∞>` + "`" + `

–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ç—Ä–∞—Ç–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏–∑ –±–∞–Ω–∫–∞ –Ω–∞–ø—Ä—è–º—É—é\. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –µ—Å—Ç—å —É –≤–∞—Å –≤ –∫–æ—à–µ–ª—å–∫–µ\.

–°–Ω—è—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞: ` + "`" + `!–æ–±–Ω–∞–ª <—Å—É–º–º–∞>` + "`" + `
`,
	"—ç–∫–æ–Ω–æ–º–∏–∫–∞": `
–í—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, —Ç—Ä–∞—Ç–∏—Ç—å, –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏ —Ö—Ä–∞–Ω–∏—Ç—å –¥–µ–Ω—å–≥–∏ ‚Äî –º–æ–Ω–µ—Ç—ã üí∞\.

–ü–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã ` + "`" + `!–ø–µ—Ä–µ–≤–æ–¥ <—Å—É–º–º–∞>` + "`" + `\.

–ü–æ–¥–∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –º–æ–Ω–µ—Ç –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –¥—Ä–∞–∫–∏, –∏–≥—Ä—ã –≤ –∫–æ—Å—Ç–∏ –∏ —Ä—ã–±–∞–ª–∫–∏\. –¢–∞–∫–∂–µ, –≤—ã –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å –¥–µ–Ω—å–≥–∏ –≤ –∫—Ä–µ–¥–∏—Ç\.

–í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–± —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –±–µ—Å–µ–¥—ã:
‚Äî ` + "`" + `!–∫–∞–ø–∏—Ç–∞–ª` + "`" + `
‚Äî ` + "`" + `!–ø—Ä–æ—Ñ–∏–ª—å` + "`" + `
‚Äî ` + "`" + `!—Ç–æ–ø –±–æ–≥–∞—Ç—ã—Ö` + "`" + `
‚Äî ` + "`" + `!—Ç–æ–ø –±–µ–¥–Ω—ã—Ö` + "`" + `

_–°–º\. —Ç–∞–∫–∂–µ: ` + "`" + `–±–∞–Ω–∫` + "`" + `, ` + "`" + `–∫—Ä–µ–¥–∏—Ç—ã` + "`" + `\._
`,
	"–Ω–µ–π—Ä–æ—Å–µ—Ç–∏": `
–ö–∞—Ä—Ç–∏–Ω–∫–∏, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–º–∏ –º–∞—à–∏–Ω–∞–º–∏\.

¬∑ ` + "`" + `!–∫–æ—Ç` + "`" + `
¬∑ ` + "`" + `!–∞–Ω–∏–º–µ` + "`" + `
¬∑ ` + "`" + `!—Ñ—É—Ä—Ä–∏` + "`" + `
¬∑ ` + "`" + `!—Ñ–ª–∞–≥` + "`" + `
¬∑ ` + "`" + `!—á–µ–ª` + "`" + `
¬∑ ` + "`" + `!–ª–æ—à–∞–¥—å` + "`" + `
¬∑ ` + "`" + `!–∞—Ä—Ç` + "`" + `
¬∑ ` + "`" + `!–∞–≤—Ç–æ` + "`" + `
`,
	"—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ": `
–°–µ—Ä–≤–∏—Å–Ω—ã–µ –∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã\.

–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: ` + "`" + `!–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è` + "`" + ` _–∏–ª–∏_ ` + "`" + `!–∫–æ–º–∞–Ω–¥—ã` + "`" + `\.
–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: ` + "`" + `!–æ—Ç–∫—Ä—ã—Ç—å` + "`" + `, ` + "`" + `!–∑–∞–∫—Ä—ã—Ç—å` + "`" + `\.
–°–º–µ–Ω–∞ –∏–º–µ–Ω–∏: ` + "`" + `!–∏–º—è <–Ω–æ–≤–æ–µ –∏–º—è>` + "`" + `\.

–ï—Å–ª–∏ —Ä–æ–±–æ—Ç\-–ø—Ä–∏—Å–ª—É–∂–Ω–∏–∫ ¬´–º—ã –∑–∞ —Ñ–∞—à–∏–∑–º¬ª –≤–∞–º –Ω–∞–¥–æ–µ–ª, –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π ` + "`" + `!–≤—ã–∫–ª—é—á–∏—Ç—å` + "`" + `\.
–ß—Ç–æ–±—ã —Ä–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É ` + "`" + `!–≤–∫–ª—é—á–∏—Ç—å` + "`" + `\.
`,
	"–∫–æ—à–∫–∏": `
–ö–æ—à–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ—Å–µ–¥—ã ¬´–Ω–µ—á–µ–≥–æ¬ª\.

¬∑ ` + "`" + `!–º–∞—Ä—Å–∏–∫` + "`" + `
¬∑ ` + "`" + `!–º—É—Å—è` + "`" + `
¬∑ ` + "`" + `!–∫–∞—Å–ø–µ—Ä` + "`" + `
¬∑ ` + "`" + `!–∑–µ–≤—Å` + "`" + `
`,
	"–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ": `
–ï—Å–ª–∏ –≤—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–º–∞–Ω–¥–∞–º–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\.

–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É:
` + "`" + `!–∑–∞–ø—Ä–µ—Ç–∏—Ç—å <–∫–æ–º–∞–Ω–¥–∞>` + "`" + `
` + "`" + `!—Ä–∞–∑—Ä–µ—à–∏—Ç—å <–∫–æ–º–∞–Ω–¥–∞>` + "`" + `

–ó–∞–±–∞–Ω–∏—Ç—å/—Ä–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
` + "`" + `!–±–∞–Ω` + "`" + ` –∏–ª–∏ ` + "`" + `!—Ä–∞–∑–±–∞–Ω` + "`" + ` –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\.
`,
}

const help = `
¬∑ ` + "`" + `\!–∏–Ω—Ñ–∞` + "`" + `
¬∑ ` + "`" + `\!–∫—Ç–æ` + "`" + `
¬∑ ` + "`" + `\!—Å–ø–∏—Å–æ–∫` + "`" + `
¬∑ ` + "`" + `\!—Ç–æ–ø` + "`" + `
¬∑ ` + "`" + `\!–ø–æ–≥–æ–¥–∞` + "`" + `
¬∑ ` + "`" + `\!–ø–∞—Ä–∞ –¥–Ω—è` + "`" + `
¬∑ ` + "`" + `\!–µ–±–ª–∞–Ω –¥–Ω—è` + "`" + `
¬∑ ` + "`" + `\!–∞–¥–º–∏–Ω –¥–Ω—è` + "`" + `
¬∑ ` + "`" + `\!–º—ã—à` + "`" + `
¬∑ ` + "`" + `\!—Ç–∏–∫—Ç–æ–∫` + "`" + `
¬∑ ` + "`" + `\!–º–∞—Å—é–Ω—è` + "`" + `
¬∑ ` + "`" + `\!–ø–∞–ø–ø–∏` + "`" + `
¬∑ ` + "`" + `\!–∏–≥—Ä–∞` + "`" + `

–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É ` + "`" + `\!–ø–æ–º–æ—â—å <—Ç–µ–º–∞>` + "`" + `\.

–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã: %s\.
`

func (a *App) handleHelp(c tele.Context) error {
	category := getMessage(c).Argument()
	if category != "" {
		out, ok := categories[category]
		if !ok {
			return userError(c, "–¢–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç.")
		}
		return c.Send(prependHelpHeader(category, out), tele.ModeMarkdownV2)
	}
	out := prependHelpHeader("–±–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã", fmt.Sprintf(help, availableCategories()))
	return c.Send(out, tele.ModeMarkdownV2)
}

func availableCategories() string {
	cats := []string{}
	for c := range categories {
		cats = append(cats, fmt.Sprintf("`%s`", c))
	}
	return strings.Join(cats, ", ")
}

func prependHelpHeader(category, help string) string {
	return fmt.Sprintf("üóÇ –ü–æ–º–æ—â—å: *%s*\\.\n%s", category, help)
}

func (a *App) handleJoin(c tele.Context) error {
	u := c.Message().UserJoined
	m, err := c.Bot().ChatMemberOf(c.Chat(), u)
	if err != nil {
		return err
	}
	if err := promoteIfNotAdmin(c, m); err != nil {
		return err
	}
	return c.Send(helloSticker())
}

func promoteIfNotAdmin(c tele.Context, m *tele.ChatMember) error {
	if m.Role != tele.Administrator && m.Role != tele.Creator {
		m.Rights.CanBeEdited = true
		m.Rights.CanManageChat = true
		return c.Bot().Promote(c.Chat(), m)
	}
	return nil
}

const (
	commandForbidden        = "–ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞ üö´"
	commandPermitted        = "–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞ ‚úÖ"
	commandAlreadyForbidden = "–ö–æ–º–∞–Ω–¥–∞ —É–∂–µ –∑–∞–ø—Ä–µ—â–µ–Ω–∞ üõë"
	commandAlreadyPermitted = "–ö–æ–º–∞–Ω–¥–∞ —É–∂–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞ ‚ùé"
)

// handleForbid forbids a command.
func (a *App) handleForbid(c tele.Context) error {
	return a.handleCommandAction(c, func(command input.Command) error {
		ok := a.model.ForbidCommand(getGroup(c), command)
		if !ok {
			return c.Send(commandAlreadyForbidden)
		}
		return c.Send(commandForbidden)
	})
}

// handlePermit permits a command.
func (a *App) handlePermit(c tele.Context) error {
	return a.handleCommandAction(c, func(command input.Command) error {
		ok := a.model.PermitCommand(getGroup(c), command)
		if !ok {
			return c.Send(commandAlreadyPermitted)
		}
		return c.Send(commandPermitted)
	})
}

const (
	specifyCommand = "–£–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É."
	unknownCommand = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞."
)

// handleCommandAction performs an action on a command.
func (a *App) handleCommandAction(c tele.Context, action func(input.Command) error) error {
	command, err := getMessage(c).CommandActionArgument()
	if err != nil {
		if errors.Is(err, input.ErrNoCommand) {
			return userError(c, specifyCommand)
		}
		if errors.Is(err, input.ErrUnknownCommand) {
			return userError(c, unknownCommand)
		}
		return internalError(c, err)
	}
	return action(command)
}
