package app

import (
	"errors"
	"nechego/service"

	tele "gopkg.in/telebot.v3"
)

const (
	parliamentMembers   = 4
	parliamentMajority  = 3
	parliamentarians    = Response("üì∞ –í –ø–∞—Ä–ª–∞–º–µ–Ω—Ç–µ –∑–∞—Å–µ–¥–∞—é—Ç:\n%s")
	impeachmentSuccess  = Response("–í—ã–Ω–µ—Å–µ–Ω –∏–º–ø–∏—á–º–µ–Ω—Ç. –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
	impeachmentPartial  = Response("–î–æ –≤—ã–Ω–µ—Å–µ–Ω–∏—è –∏–º–ø–∏—á–º–µ–Ω—Ç–∞ –æ—Å—Ç–∞–ª–æ—Å—å %d –≥–æ–ª–æ—Å–æ–≤.")
	notParliamentMember = UserError("–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –ø–∞—Ä–ª–∞–º–µ–Ω—Ç–µ.")
	alreadyVoted        = UserError("–í—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –∑–∞ –∏–º–ø–∏—á–º–µ–Ω—Ç.")
	alreadyImpeached    = UserError("–°–µ–≥–æ–¥–Ω—è —É–∂–µ –±—ã–ª –≤—ã–Ω–µ—Å–µ–Ω –∏–º–ø–∏—á–º–µ–Ω—Ç.")
)

// !–ø–∞—Ä–ª–∞–º–µ–Ω—Ç
func (a *App) handleParliament(c tele.Context) error {
	parliament, err := a.service.Parliament(getGroup(c))
	if err != nil {
		return respondInternalError(c, err)
	}
	return respond(c, parliamentarians.Fill(a.itemizeUsers(parliament...)))
}

// !–∏–º–ø–∏—á–º–µ–Ω—Ç
func (a *App) handleImpeachment(c tele.Context) error {
	votesLeft, err := a.service.Impeachment(getGroup(c), getUser(c))
	if err != nil {
		if errors.Is(err, service.ErrNotParliamentMember) {
			return respondUserError(c, notParliamentMember)
		}
		if errors.Is(err, service.ErrAlreadyVoted) {
			return respondUserError(c, alreadyVoted)
		}
		if errors.Is(err, service.ErrAlreadyImpeached) {
			return respondUserError(c, alreadyImpeached)
		}
		return respondInternalError(c, err)
	}
	if votesLeft == 0 {
		return respond(c, impeachmentSuccess)
	}
	return respond(c, impeachmentPartial.Fill(votesLeft))
}
