package format

import (
	"fmt"
	"nechego/game"
)

const (
	NoDice    = "üé≤ –£ –≤–∞—Å –Ω–µ—Ç –∫–æ—Å—Ç–µ–π."
	GameGoing = "üé≤ –ò–≥—Ä–∞ —É–∂–µ –∏–¥–µ—Ç."
)

func DiceGame(mention string, bet int, seconds int) string {
	c := NewConnector("\n")
	c.Add(fmt.Sprintf("üé≤ %s –∏–≥—Ä–∞–µ—Ç –Ω–∞ %s", Name(mention), Money(bet)))
	c.Add(fmt.Sprintf("–£ –≤–∞—Å <code>%d —Å–µ–∫—É–Ω–¥</code> –Ω–∞ —Ç–æ, —á—Ç–æ–±—ã –±—Ä–æ—Å–∏—Ç—å –∫–æ—Å—Ç–∏!", seconds))
	return c.String()
}

func DiceGameResult(r game.DiceGameResult) string {
	if r.Outcome == game.Win {
		return fmt.Sprintf("üí• –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ %s", Money(r.Prize))
	}
	if r.Outcome == game.Lose {
		return "üòµ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏."
	}
	return "üé≤ –ù–∏—á—å—è."
}

func DiceTimeout(bet int) string {
	return fmt.Sprintf("<i>‚è∞ –í—Ä–µ–º—è –≤—ã—à–ª–æ: –≤—ã –ø–æ—Ç–µ—Ä—è–ª–∏ %s</i>", Money(bet))
}

func MinBet(n int) string {
	return fmt.Sprintf("üíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ %s", Money(n))
}
