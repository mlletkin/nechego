package game

import (
	"fmt"
	"time"
)

type Cash struct {
	Money int
}

func (c Cash) String() string {
	return fmt.Sprintf("üíµ –ù–∞–ª–∏—á–Ω—ã–µ (%d ‚Ç¥)", c.Money)
}

func (u *User) Cash() (c *Cash, ok bool) {
	for _, v := range u.Inventory.normalize() {
		switch x := v.Value.(type) {
		case *Cash:
			return x, true
		}
	}
	return nil, false
}

type Wallet struct {
	Money int
}

func (w Wallet) String() string {
	return fmt.Sprintf("üí∞ –ö–æ—à–µ–ª–µ–∫ (%d ‚Ç¥)", w.Money)
}

func (u *User) Wallet() (w *Wallet, ok bool) {
	for _, v := range u.Inventory.normalize() {
		switch x := v.Value.(type) {
		case *Wallet:
			return x, true
		}
	}
	return nil, false
}

type CreditCard struct {
	Bank    int
	Number  int
	Expires time.Time
	Money   int
}

func (c CreditCard) String() string {
	return fmt.Sprintf("üí≥ –ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞ (%d ‚Ç¥)", c.Money)
}

type Debt struct {
	CreditorID int
	Money      int
	Percent    int
}

func (d Debt) String() string {
	return fmt.Sprintf("üíµ –î–æ–ª–≥ (%d ‚Ç¥, %d%%)", d.Money, d.Percent)
}
