package economy

import (
	"fmt"
	"nechego/format"
	"nechego/game"
	"nechego/handlers"
	tu "nechego/teleutil"
	"strings"

	tele "gopkg.in/telebot.v3"
)

type Capital struct {
	Universe *game.Universe
}

var capitalRe = handlers.Regexp("^!–∫–∞–ø–∏—Ç–∞–ª")

func (h *Capital) Match(c tele.Context) bool {
	return capitalRe.MatchString(c.Text())
}

func (h *Capital) Handle(c tele.Context) error {
	world, _ := tu.Lock(c, h.Universe)
	defer world.Unlock()

	total, avg := world.Capital()
	magnate := world.TopUser(game.ByWealth)
	balance := magnate.Balance().Total()
	list := []string{
		fmt.Sprintf("<b>üí∏ –ö–∞–ø–∏—Ç–∞–ª –±–µ—Å–µ–¥—ã ¬´%s¬ª</b>: %s\n",
			c.Chat().Title, format.Money(total)),
		fmt.Sprintf("‚öñÔ∏è –í —Å—Ä–µ–¥–Ω–µ–º –Ω–∞ —Å—á–µ—Ç—É: %s\n",
			format.Money(avg)),
		fmt.Sprintf("üé© –í —Ä—É–∫–∞—Ö –º–∞–≥–Ω–∞—Ç–∞ %s: %s,",
			format.User(magnate), format.Money(balance)),
		fmt.Sprintf("–∏–ª–∏ <code>%s</code> –æ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ä–µ–¥—Å—Ç–≤.",
			format.Percentage(float64(balance)/float64(total))),
	}
	return c.Send(strings.Join(list, "\n"), tele.ModeHTML)
}
