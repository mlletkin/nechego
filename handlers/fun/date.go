package fun

import (
	"fmt"
	"regexp"
	"time"

	tele "gopkg.in/zxy248/telebot.v3"
)

type Date struct{}

var dateRe = regexp.MustCompile("^!–¥–∞—Ç–∞")

func (h *Date) Match(c tele.Context) bool {
	return dateRe.MatchString(c.Text())
}

func (h *Date) Handle(c tele.Context) error {
	t := time.Now()
	y, m, d := t.Date()
	w := t.Weekday()
	mn := monthName(m)
	wn := weekdayName(w)
	s := fmt.Sprintf("üìÖ –°–µ–≥–æ–¥–Ω—è %s, %d %s %d –≥.", wn, d, mn, y)
	return c.Send(s)
}

func weekdayName(w time.Weekday) string {
	days := [...]string{
		"–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ",
		"–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
		"–≤—Ç–æ—Ä–Ω–∏–∫",
		"—Å—Ä–µ–¥–∞",
		"—á–µ—Ç–≤–µ—Ä–≥",
		"–ø—è—Ç–Ω–∏—Ü–∞",
		"—Å—É–±–±–æ—Ç–∞",
	}
	return days[w]
}

func monthName(m time.Month) string {
	months := [...]string{
		"—è–Ω–≤–∞—Ä—è",
		"—Ñ–µ–≤—Ä–∞–ª—è",
		"–º–∞—Ä—Ç–∞",
		"–∞–ø—Ä–µ–ª—è",
		"–º–∞—è",
		"–∏—é–Ω—è",
		"–∏—é–ª—è",
		"–∞–≤–≥—É—Å—Ç–∞",
		"—Å–µ–Ω—Ç—è–±—Ä—è",
		"–æ–∫—Ç—è–±—Ä—è",
		"–Ω–æ—è–±—Ä—è",
		"–¥–µ–∫–∞–±—Ä—è",
	}
	return months[m-1]
}
